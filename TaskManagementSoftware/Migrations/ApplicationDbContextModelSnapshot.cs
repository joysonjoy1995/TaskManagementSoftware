// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagementSoftware.Data;

#nullable disable

namespace TaskManagementSoftware.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskManagementSoftware.Models.Material", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ManufacturerCode")
                        .HasColumnType("int");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            ID = new Guid("3237c2c6-bf43-4bdd-9f64-ab3d4e520bd0"),
                            ManufacturerCode = 123,
                            PartNumber = "M001",
                            Price = 50,
                            UnitOfIssue = "Liter"
                        });
                });

            modelBuilder.Entity("TaskManagementSoftware.Models.Task", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagementSoftware.Models.TaskMaterialUsage", b =>
                {
                    b.Property<Guid>("TaskID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitOfMeasurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskID", "MaterialID");

                    b.HasIndex("MaterialID");

                    b.ToTable("TaskMaterialUsages");
                });

            modelBuilder.Entity("TaskManagementSoftware.Models.TaskMaterialUsage", b =>
                {
                    b.HasOne("TaskManagementSoftware.Models.Material", "Material")
                        .WithMany("TaskMaterialUsages")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagementSoftware.Models.Task", "Task")
                        .WithMany("TaskMaterialUsages")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskManagementSoftware.Models.Material", b =>
                {
                    b.Navigation("TaskMaterialUsages");
                });

            modelBuilder.Entity("TaskManagementSoftware.Models.Task", b =>
                {
                    b.Navigation("TaskMaterialUsages");
                });
#pragma warning restore 612, 618
        }
    }
}
